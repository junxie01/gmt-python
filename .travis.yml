# Configuration file for TravisCI

# We use miniconda for Python so don't need any Python specific tools
language: generic

# Use the container builds so we don't need sudo priviledges
sudo: false

# Only build pushes to the master branch and tags. This avoids the double
# builds than happen when working on a branch instead of a fork.
branches:
    only:
        - master
        # Regex to build tagged commits with version numbers
        - /\d+\.\d+(\.\d+)?(\S*)?$/

# Define environment variables common to all builds
env:
    global:
        # Encrypted variables
        # Github Token for pushing the built docs (GH_TOKEN)
        - secure: "QII0477v0mmCCW3qSNXLCOtqraJaCICtSghiyrxYsuUdJTrXzXBNhX2KLIjcKYXOK1HdwYOFGf8xBVLl44clHlAW7R32ecEGeTJizr0yqTBvT3rNG1Xb7+E6jdXqrIs//PmPRaF8zOZxPl1SJKDK4jJpCx5HnAflg7wl/6tQLD6K3/dQ6FG2s3UKsc8o4qchOiEfxYhOuKo3jt2S0HdsNAQFw3mFHCCrclxDr3llSQtWSY0mirZnta7AI4nMvzxl2nUhdHEpxgzIjWxCWLAwmj3/NxLz0VSgNCtl2bNYk6AYrc5RcANGk2fcYaZr9mTU3Aax60S4389B39Pq95hBN21jYdbw9vCN810dYpTUk2siLysx8gF6r2JWEF8SskXlF79r3phtaFTMOS4GqeiuwjifZeaLAL/H1PTQFDDG/UKEwBpLuzrPMDw/84iRtyWKqWR/f14YdKhH4YAkcOuRglEXiI/1A0qWKiZ1iZfky8Tys+wN5nyss23w/JeYXVgBdTkNzvp3diFWK8+Wl9j3HYpX9LlEHJwASA1wHLL85t4ToymgLjo9gvLvwzB7T+fWNtEbh4ELbvI7jaKrvir8uSGYy4bGbfRclh5CktD//mTLhDyAsQDS8obF/Ri9mVqFzjK6417ORfu8qnpXU+mIHPRBoKvpS2WqnPtSwF8KPv8="
        # TWINE_PASSWORD to deploy to PyPI
        - secure: "md4fgPt9RC/sCoN5//5PcNHLUd9gWQGewV5hFpWW88MRTjxTng1Zfs8r7SqlF2AkEEepFfyzq0BEe9c3FMAnFbec3KmqdlQen4V8xDbLrcTlvkPlTrYGbAScUvdhhqojB//hMHoTD4KvxAv9CiUwFBO4hCMmj2buWHUbV9Ksu5WCW9mF/gkt/hIuYAU6Mbwt8PiYyMgUpzMHO1vruofcWRaVnvKwmBqHB0ae86D4/drpwn4CWjlM12WUnphT2bssiyPkw24FZtCN6kPVta6bLZKBxu0bZpw2vbXuUG+Yh19Q4mp8wNYT3XSHJf8Hl5LfujF48+cLWu+6rlCkdcelyVylhWLFc3rGOONAv4G8jWW2yNSz/bLQfJnMpd81fQEu5eySmFxB7mdB0uyKpvIG1jMJQ73LlYKakKLAPdYhMFyQAHoX9gvCE3S4QR95DBMi5gM/pZubOCcMLdjPHB5JKpJHSjxbOzyVwgmsUIEgd5Bi2vZvvYQXn1plk4xpQ3PhXc+/gi33bzY89mKcfOn0HJ2pD1vLqDXRCBsMCakoLZ0JB/6bacaz4FngbsGWuQ+I1cz20lJGL/MSi9bW1G7Uoidt3GXXWDmXrWt70vIXlLIxr8XV0Mu/rPbauGgWE+ZSYEfvdM5sP+FNF7vQ5de+Fkvzg5Z3tTfR+O1W+d7+vM4="
        - TWINE_USERNAME=Leonardo.Uieda
        # The file with the listed requirements to be installed by conda
        - CONDA_REQUIREMENTS=requirements.txt
        - CONDA_REQUIREMENTS_DEV=requirements-dev.txt
        # Get GMT6 from the development channel
        - CONDA_EXTRA_CHANNEL=conda-forge/label/dev
        # These variables control which actions are performed in a build
        - TEST=false
        - CHECK=false
        - BUILD_DOCS=false
        - DEPLOY_DOCS=false
        - DEPLOY_PYPI=false

matrix:
    # Build under the following configurations
    include:
        - name: "Style checks"
          os: linux
          env:
              - PYTHON=3.6
              - CHECK=true
              # Don't need to install everything just to run the style checks
              - CONDA_INSTALL_EXTRA="black flake8 pylint"
              - CONDA_REQUIREMENTS=""
              - CONDA_REQUIREMENTS_DEV=""
        - name: "Linux - Python 3.7"
          os: linux
          env:
              - PYTHON=3.7
              - TEST=true
              - BUILD_DOCS=true
        - name: "Linux - Python 3.6 (also deploys)"
          os: linux
          env:
              - PYTHON=3.6
              - TEST=true
              - BUILD_DOCS=true
              - DEPLOY_DOCS=true
              - DEPLOY_PYPI=true
        - name: "Linux - Python 3.6 - GMT master branch"
          os: linux
          env:
              - PYTHON=3.6
              - TEST=true
              - BUILD_DOCS=true
        - name: "Mac - Python 3.7"
          os: osx
          env:
              - PYTHON=3.7
              - TEST=true
              - BUILD_DOCS=true
        - name: "Mac - Python 3.6"
          os: osx
          env:
              - PYTHON=3.6
              - TEST=true
              - BUILD_DOCS=true

before_install:
    # Get the Fatiando CI scripts
    - git clone https://github.com/fatiando/continuous-integration.git
    # Download and install miniconda and setup dependencies
    # Need to source the script to set the PATH variable globaly
    - source continuous-integration/travis/setup-miniconda.sh
    # Show installed pkg information for postmortem diagnostic
    - conda list
    # install GMT master branch
    - if [ "$TRAVIS_JOB_NAME" == "Linux - Python 3.6 - GMT master branch" ]; then
        git clone --depth=1 https://github.com/GenericMappingTools/gmt gmt-master
        sh gmt-master/ci/travis-setup.sh
        sh gmt-master/ci/travis-build.sh
      fi

install:
    # Package and install
    - python setup.py bdist_wheel
    - pip install dist/*

script:
    # Check code for style and lint for code quality
    - if [ "$CHECK" == "true" ]; then
        make check;
        make lint;
      fi
    # Run the test suite. Make pytest report any captured output on stdout or stderr.
    - if [ "$TEST" == "true" ]; then
          pip install codecov;
          make test PYTEST_EXTRA="-r P";
      fi
    # Build the documentation
    - if [ "$BUILD_DOCS" == "true" ]; then
        make -C doc all;
      fi

# Things to do if the build is successful
after_success:
    # Upload coverage information
    - if [ "$TEST" == "true" ]; then
        coverage xml;
        echo "Uploading coverage to Codecov";
        codecov -e PYTHON;
      fi

deploy:
    # Make a release on PyPI
    - provider: script
      script: continuous-integration/travis/deploy-pypi.sh
      on:
          tags: true
          condition: '$DEPLOY_PYPI == "true"'
    # Push the built HTML in doc/_build/html to the gh-pages branch
    - provider: script
      script: continuous-integration/travis/deploy-gh-pages.sh
      skip_cleanup: true
      on:
          branch: master
          condition: '$DEPLOY_DOCS == "true"'
    # Push HTML when building tags as well
    - provider: script
      script: continuous-integration/travis/deploy-gh-pages.sh
      skip_cleanup: true
      on:
          tags: true
          condition: '$DEPLOY_DOCS == "true"'

notifications:
    email: false
    webhooks:
        # Integration for Gitter
        urls:
            - https://webhooks.gitter.im/e/648c8355310c2ef3df4f
        on_success: change  # options: [always|never|change] default: always
        on_failure: always  # options: [always|never|change] default: always
        on_start: never     # options: [always|never|change] default: always
